name: Build and Deploy Docs to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

  workflow_dispatch:  # Allow manual triggering of the workflow

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment with Poetry
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "::add-path::$(poetry config --list | grep 'cache-dir' | sed 's/cache-dir = //g')/bin"

      # Install dependencies using Poetry
      - name: Install dependencies
        run: |
          poetry install

      # Build the Sphinx documentation
      - name: Build the docs
        run: |
          poetry run make -C docs html

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/html  # Path to the generated docs
          target_branch: gh-pages  # The branch that will host the docs
