x-openscraper-env-variables:
  &openscraper-env-variables # - OPENSCRAPERS_SQL_DB_CONNECTION: postgresql://postgres:dolphins@openscrapers-postgres:5432/postgres

  OPENSCRAPERS_INTERNAL_API_URL: "http://openscrapers-api:8000"
  OPENSCRAPERS_S3_OBJECT_BUCKET: ${OPENSCRAPERS_S3_OBJECT_BUCKET}
  OPENSCRAPERS_S3_ACCESS_KEY: ${OPENSCRAPERS_S3_ACCESS_KEY}
  OPENSCRAPERS_S3_SECRET_KEY: ${OPENSCRAPERS_S3_SECRET_KEY}
  CRIMSON_URL: ${CRIMSON_URL}
  OPENSCRAPERS_REDIS_DOMAIN: redis:6379
  DEEPINFRA_API_KEY: "${DEEPINFRA_API_KEY}"

services:
  gluetun:
    image: qmcgaw/gluetun
    # container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      # - "35859:35859"
      #
      - 33399:33399/tcp
    volumes:
      - ./wireguard-configs:/gluetun/wireguard
      - ./gluetun/busybox:/usr/local/bin/busybox
      - ./wireguard-configs/us-chi-wg-303.conf:/gluetun/wireguard/wg0.conf
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_ENDPOINT_PORT=58277
      # Timezone for accurate log times
      - TZ=

      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=
    healthcheck:
      test: ["CMD-SHELL", "/gluetun-entrypoint healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 2
  openscrapers-api:
    network_mode: service:gluetun
    # ports:
    build:
      context: ./openscraper_processing/
      dockerfile: Dockerfile
    volumes:
      - ./openpuc_scrapers:/app/openpuc_scrapers
    environment:
      <<: *openscraper-env-variables
    depends_on:
      gluetun:
        condition: service_healthy
