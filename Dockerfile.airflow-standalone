# FROM apache/airflow:3.0.0rc4-python3.12
FROM apache/airflow:2.10.5-python3.12


# RUN pip --version && sleep 5000
RUN pip install --no-cache-dir uv


WORKDIR /app

USER root 
RUN apt-get update
RUN apt-get install -y \ 
  socat netcat-traditional \ 
  ca-certificates \
  wget \
  unzip \
  # Firefox dependencies
  libgtk-3-0 \
  libdbus-glib-1-2 \
  libxt6 \
  && rm -rf /var/lib/apt/lists/*

# Install Firefox ESR
RUN apt-get update && apt-get install -y \
  firefox-esr \
  && rm -rf /var/lib/apt/lists/*

# Install GeckoDriver
ARG GECKODRIVER_VERSION="v0.36.0"
RUN wget --progress=dot:giga -O /tmp/geckodriver.tar.gz \
  "https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz" && \
  # https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux64.tar.gz
  tar -xzf /tmp/geckodriver.tar.gz -C /usr/local/bin/ && \
  rm /tmp/geckodriver.tar.gz

# Verify installations
RUN chmod +x /usr/local/bin/geckodriver && \
  firefox --version && \
  geckodriver --version
RUN chown -R airflow /app
USER airflow

# Copy package structure



# RUN uv pip compile pyproject.toml --output-file requirements.txt
# Testing new dependancy resolution stuff
COPY ./airflow-requirements.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Test Chrome driver installation
# RUN python -c "raise ValueError()" # Ran once as validation to see if any exceptions in python got bubbled up to the shell
RUN python -c "from selenium import webdriver; options = webdriver.FirefoxOptions(); options.add_argument('--headless'); driver = webdriver.Firefox(options=options); driver.get('https://www.google.com'); driver.quit(); print('\n\n*** Firefox driver test successful! ***\n')"


COPY openpuc_scrapers/ /app/openpuc_scrapers/


# Test Chrome driver installation
USER root 
RUN chown -R airflow /app

WORKDIR /home/airflow
# TODO: Move to beginning of file to prevent reinstalling every time dependancies change.
# Install socat and netcat (for port checking)
COPY standalone-entrypoint.sh ./entrypoint.sh
RUN chmod +x ./entrypoint.sh
USER airflow
RUN python -c "from selenium import webdriver; options = webdriver.FirefoxOptions(); options.add_argument('--headless'); driver = webdriver.Firefox(options=options); driver.get('https://www.google.com'); driver.quit(); print('\n\n*** Firefox driver test successful! ***\n')"

ENTRYPOINT [ "/bin/bash" ]
CMD ["./entrypoint.sh"]
# CMD ["./entrypoint.sh"]

# Doesnt work rn
# RUN export PYTHONPATH=$PYTHONPATH:/app
# ENV PYTHONPATH=/app:$PYTHONPATH


